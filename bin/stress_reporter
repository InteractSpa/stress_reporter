#!/usr/bin/env ruby

require 'stress_reporter'
require 'stress_reporter/checker'
require 'stress_reporter/actions/xmanager'

logger = Logger.new("/tmp/check_senato_status_#{Time.now.strftime('%Y.%d.%m')}.log")
puts "Going to trigger when load average exceeds #{StressReporter::Checker::LIMIT}"

while true do
  begin
    Timeout::timeout(3) do
      if StressReporter::Checker.go?
        puts "Ecceduto!"
        StressReporter::Actions::Xmanager.report.each {|l|
          line = "#{Time.now.strftime('%Y/%d/%m %H:%M:%S')}\t#{StressReporter::Checker.load_average}\t#{ line }"
          puts line
          logger.info line
        }
      end
    end
  rescue Timeout::Error => ex
    msg = "#{Time.now.strftime('%Y/%d/%m %H:%M:%S')} Timeout Error executing checks!!"
    logger.error msg
    puts msg
  end
end
